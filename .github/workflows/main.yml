# .github/workflows/android.yml
name: Android CI & Release

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]    # create a release when pushing a tag like v1.0.0
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write  # required to create releases and upload assets

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (submodules too)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Java 21 (Temurin) + Gradle cache
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept SDK licenses (non-interactive)
        run: |
          set +e
          yes | sdkmanager --licenses >/dev/null 2>&1
          set -e

      - name: Install SDK packages
        run: |
          sdkmanager "platform-tools" "platforms;android-36" "build-tools;36.0.0"

      - name: Restore keystore from secret
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > keystore.jks
          ls -l keystore.jks

      - name: Build signed release (GitHub flavor)
        env:
          ANDROID_KEYSTORE_PATH: keystore.jks
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          ./gradlew :composeApp:assembleGithubRelease --no-daemon

      - name: Verify APK signature
        run: |
          APK=$(ls composeApp/build/outputs/apk/github/release/*.apk | head -n1)
          echo "Verifying $APK"
          "$ANDROID_SDK_ROOT/build-tools/36.0.0/apksigner" verify --verbose "$APK"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: composeApp/build/outputs/apk/**/release/*.apk
          if-no-files-found: warn

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-apks
          path: dist

      - name: Create GitHub Release and upload APKs
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
